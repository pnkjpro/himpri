import{c as x,n as T,g as d,b as h,d as i,t as I}from"./normalizeDates-MJlMPps6.js";import{e as b,g}from"./en-US-ClfMaaVW.js";import{c as w,b as y,a as O}from"./differenceInSeconds-C3I0pIaR.js";function N(a){return x(a,Date.now())}function Y(a,r,s){const M=g(),e=(s==null?void 0:s.locale)??M.locale??b,S=2520,o=w(a,r);if(isNaN(o))throw new RangeError("Invalid time value");const t=Object.assign({},s,{addSuffix:s==null?void 0:s.addSuffix,comparison:o}),[m,l]=T(s==null?void 0:s.in,...o>0?[r,a]:[a,r]),f=y(l,m),X=(d(l)-d(m))/1e3,n=Math.round((f-X)/60);let u;if(n<2)return s!=null&&s.includeSeconds?f<5?e.formatDistance("lessThanXSeconds",5,t):f<10?e.formatDistance("lessThanXSeconds",10,t):f<20?e.formatDistance("lessThanXSeconds",20,t):f<40?e.formatDistance("halfAMinute",0,t):f<60?e.formatDistance("lessThanXMinutes",1,t):e.formatDistance("xMinutes",1,t):n===0?e.formatDistance("lessThanXMinutes",1,t):e.formatDistance("xMinutes",n,t);if(n<45)return e.formatDistance("xMinutes",n,t);if(n<90)return e.formatDistance("aboutXHours",1,t);if(n<h){const c=Math.round(n/60);return e.formatDistance("aboutXHours",c,t)}else{if(n<S)return e.formatDistance("xDays",1,t);if(n<i){const c=Math.round(n/h);return e.formatDistance("xDays",c,t)}else if(n<i*2)return u=Math.round(n/i),e.formatDistance("aboutXMonths",u,t)}if(u=O(l,m),u<12){const c=Math.round(n/i);return e.formatDistance("xMonths",c,t)}else{const c=u%12,D=Math.trunc(u/12);return c<3?e.formatDistance("aboutXYears",D,t):c<9?e.formatDistance("overXYears",D,t):e.formatDistance("almostXYears",D+1,t)}}function H(a,r){return Y(a,N(a),r)}function U(a,r){return I(a*1e3,r==null?void 0:r.in)}export{H as a,U as f};
